version: '3.8'

services:
  dev:
    container_name: markei_dev
    image: markei-dev:1.0.0
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:debug
    ports:
      - ${PORT}:50051
    networks:
      - nodejs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    environment:
      REDIS_HOST: db
      REDIS_PORT: ${DB_PORT}
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    env_file:
      - .env
    links:
      - db
  prod:
    container_name: markei_prod
    image: markei-prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      -  ${PORT}:50051
    networks:
      - nodejs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    environment:
      REDIS_HOST: db
      REDIS_PORT: ${DB_PORT}
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    env_file:
      - .env
    links:
      - db
  db:
    image: redis:7-alpine
    restart: always
    ports:
      - '6379:6379'
    env_file:
      - .env
    command: ["redis-server", "--save", "20", "1", "--loglevel" , "warning", "--requirepass", "eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81"]
    volumes:
      - db:/data
volumes:
  db:
    driver: local
networks:
  nodejs-network:
